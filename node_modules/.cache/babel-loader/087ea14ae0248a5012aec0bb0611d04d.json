{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/user-activity-tracker/src/components/UserCard/index.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TimePicker from \"../TimePicker\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { getActivityPeriodsObj, getFilteredActivityPeriodDateAsKey, getDateString } from '../../utils';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 10,\n    marginLeft: \"20%\",\n    marginRight: \"20%\"\n  },\n  title: {\n    fontSize: 14\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"80%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n    border: \"2px solid \" + theme.palette.background.paper,\n    overflow: \"scroll\",\n    '@media (min-width:1025px)': {\n      width: \"40%\"\n    }\n  },\n  activityTitle: {\n    marginTop: 20,\n    marginBottom: 10,\n    fontSize: 18,\n    color: \"#3c3c3c\"\n  },\n  container: {\n    marginTop: 10\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nexport default function UserCard(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [selectedDate, setSelectedDate] = React.useState(\"\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedDate(\"\");\n  };\n\n  const onSelectedDate = newDate => {\n    setSelectedDate(getDateString(newDate));\n  };\n\n  const {\n    user\n  } = props;\n  const activity_periods = getActivityPeriodsObj(user);\n  const filteredActivityPeriods = getFilteredActivityPeriodDateAsKey(activity_periods, selectedDate);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, user.real_name))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    id: \"simple-modal-title\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"User Activity Details\"), /*#__PURE__*/React.createElement(TimePicker, {\n    selectedDate: onSelectedDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), Object.keys(filteredActivityPeriods).length ? Object.keys(filteredActivityPeriods).map(key => {\n    return /*#__PURE__*/React.createElement(List, {\n      className: classes.modal,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"User was active on \", key, \" at:\"), filteredActivityPeriods[key].map(item => {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: item.startTime + item.endTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        id: \"simple-modal-description\",\n        primary: `${item.startTime} - ${item.endTime}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }\n      }));\n    }));\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"No Activity Period found.\")))));\n}","map":{"version":3,"sources":["/Users/admin/Desktop/user-activity-tracker/src/components/UserCard/index.js"],"names":["React","makeStyles","Card","CardContent","Typography","Modal","TimePicker","List","ListItem","ListItemText","getActivityPeriodsObj","getFilteredActivityPeriodDateAsKey","getDateString","useStyles","theme","root","marginTop","marginLeft","marginRight","title","fontSize","paper","position","width","height","backgroundColor","palette","background","padding","spacing","border","overflow","activityTitle","marginBottom","color","container","getModalStyle","top","left","transform","UserCard","props","classes","modalStyle","useState","open","setOpen","selectedDate","setSelectedDate","handleOpen","handleClose","onSelectedDate","newDate","user","activity_periods","filteredActivityPeriods","id","real_name","Object","keys","length","map","key","modal","item","startTime","endTime"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TimePicker from \"../TimePicker\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { getActivityPeriodsObj, getFilteredActivityPeriodDateAsKey, getDateString } from '../../utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 10,\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"80%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n    border: \"2px solid \" + theme.palette.background.paper,\n    overflow: \"scroll\",\n    '@media (min-width:1025px)': {\n      width: \"40%\",\n    }\n  },\n  activityTitle: {\n    marginTop: 20,\n    marginBottom: 10,\n    fontSize: 18,\n    color: \"#3c3c3c\",\n  },\n  container: {\n    marginTop: 10,\n  },\n}));\n\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nexport default function UserCard(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [selectedDate, setSelectedDate] = React.useState(\"\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedDate(\"\");\n  };\n\n  const onSelectedDate = (newDate) => {\n    setSelectedDate(getDateString(newDate));\n  };\n\n  const { user } = props;\n  const activity_periods = getActivityPeriodsObj(user);\n  const filteredActivityPeriods = getFilteredActivityPeriodDateAsKey(\n    activity_periods,\n    selectedDate\n  );\n  return (\n    <div className={classes.container}>\n      <div key={user.id}>\n        <Card className={classes.root} onClick={handleOpen}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {user.real_name}\n            </Typography>\n          </CardContent>\n        </Card>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classes.paper}>\n            <Typography id=\"simple-modal-title\" variant=\"h6\">\n              User Activity Details\n              </Typography>\n            <TimePicker selectedDate={onSelectedDate} />\n            {Object.keys(filteredActivityPeriods).length ? (\n              Object.keys(filteredActivityPeriods).map((key) => {\n                return (\n                  <List className={classes.modal} key={key}>\n                    <Typography variant=\"subtitle2\">\n                      User was active on {key} at:\n                      </Typography>\n                    {filteredActivityPeriods[key].map((item) => {\n                      return (\n                        <ListItem key={item.startTime + item.endTime}>\n                          <ListItemText\n                            id=\"simple-modal-description\"\n                            primary={`${item.startTime} - ${item.endTime}`}\n                          />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                );\n              })\n            ) : (\n                <Typography variant=\"caption\">No Activity Period found.</Typography>\n              )}\n          </div>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}